class PaginationLink {

    constructor(currentPage, searchDto) {
        this.currentPage = currentPage
        this.searchDto = searchDto
    }

    makePrevHref() {

        let url = "?page=" + (this.currentPage - 1)

        url += this.makeSearchQuery()

        return url
    }

    makeNextHref() {

        let url = "?page=" + (this.currentPage + 1)

        url += this.makeSearchQuery()

        return url
    }

    makePageHref(page) {

        let url = "?page=" + page

        url += this.makeSearchQuery()

        return url
    }

    makeSearchQuery() {
        let query = ""

        const usernameCondition = this.searchDto["username"]
        const nicknameCondition = this.searchDto["nickname"]
        const filenameCondition = this.searchDto["title"]
        const startDateCondition = this.searchDto["startDate"]
        const endDateCondition = this.searchDto["endDate"]

        if (usernameCondition != "" && usernameCondition != null) {
            query += ("&username=" + usernameCondition)
        }

        if (nicknameCondition != "" && nicknameCondition != null) {
            query += ("&nickname=" + nicknameCondition)
        }

        if (filenameCondition != "" && filenameCondition != null) {
            query += ("&filename=" + filenameCondition)
        }

        if (startDateCondition != null && endDateCondition != null) {
            query += ("&startDate=" + startDateCondition)
            query += ("&endDate=" + endDateCondition)
        }

        return query
    }
}