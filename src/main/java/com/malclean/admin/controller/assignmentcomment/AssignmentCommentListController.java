package com.malclean.admin.controller.assignmentcomment;

import com.malclean.admin.controller.pagination.CustomPage;
import com.malclean.admin.entity.AssignmentComment;
import com.malclean.admin.repository.assignmentcomment.DslAssignmentCommentRepository;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.stream.Collectors;

@RequiredArgsConstructor
@Slf4j
@RestController
public class AssignmentCommentListController {

    public final DslAssignmentCommentRepository dslAssignmentCommentRepository;

    @GetMapping("/assignments/{assignmentId}/comments")
    public CustomPage assignmentCommentList(@PathVariable Long assignmentId, Long lastCommentId) {
        List<CommentInList> commentInListListResponse = dslAssignmentCommentRepository.findAll(assignmentId, lastCommentId, 10).stream()
                .map(assignmentComment -> new CommentInList(assignmentComment))
                .collect(Collectors.toList());
        return new CustomPage(commentInListListResponse);
    }

    @Getter
    public static class CommentInList {

        private Long id;

        private Long writerId;

        private String writerUsername;

        private String content;

        public CommentInList(AssignmentComment assignmentComment) {
            this.id = assignmentComment.getId();
            this.writerId = assignmentComment.getWriter().getId();
            this.writerUsername = assignmentComment.getWriter().getUsername();
            this.content = assignmentComment.getContent();
        }
    }
}
