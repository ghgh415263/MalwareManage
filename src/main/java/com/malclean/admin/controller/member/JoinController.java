package com.malclean.admin.controller.member;

import com.malclean.admin.entity.Member;
import com.malclean.admin.enumtype.AuthorityType;
import com.malclean.admin.service.member.MemberSaveService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

@RequiredArgsConstructor
@Slf4j
@Controller
public class JoinController {

    private final MemberSaveService memberSaveService;
    private final PasswordEncoder passwordEncoder;

    @GetMapping("/join")
    public String joinPage(@ModelAttribute MemberJoinDto memberJoinDto) {
        return "joinForm";
    }

    @PostMapping("/join")
    public String join(@ModelAttribute @Validated MemberJoinDto memberJoinDto, BindingResult bindingResult) {
        if (bindingResult.hasErrors()) {
            return "joinForm";
        }

        String encodedPassword = passwordEncoder.encode(memberJoinDto.getPassword());
        Member newMember = Member.builder()
                .username(memberJoinDto.getUsername())
                .password(encodedPassword)
                .authority(AuthorityType.toEnumType(memberJoinDto.getAuthority()))
                .employeeId(memberJoinDto.getEmployeeId())
                .department(memberJoinDto.getDepartment())
                .build();

        memberSaveService.saveMember(newMember);

        return "joinComplete";
    }
}
