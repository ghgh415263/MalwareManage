package com.malclean.admin.controller.malwarereport;

import com.malclean.admin.security.CustomUserDetails;
import com.malclean.admin.service.malwarereport.MalwareReportSaveService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.multipart.MultipartFile;

@RequiredArgsConstructor
@Slf4j
@Controller
public class MalwareReportSaveController {

    public final MalwareReportSaveService malwareReportSaveService;

    @GetMapping("malware/{malwareId}/report-post")
    public String MalwareReportSaveForm(@PathVariable Long malwareId, @ModelAttribute MalwareReportSaveDto malwareReportSaveDto) {
        return "malwareReportPostForm";
    }

    @PostMapping("malware/{malwareId}/report-post")
    public String MalwareReportSave(@PathVariable Long malwareId, @ModelAttribute MalwareReportSaveDto malwareReportSaveDto, BindingResult bindingResult, @AuthenticationPrincipal CustomUserDetails sessionMemberDetails) {

        MultipartFile multipartFile = malwareReportSaveDto.getMultipartFile();
        if (multipartFile.isEmpty()) {
            bindingResult.rejectValue("multipartFile", null, "파일을 첨부하십시요");
        }

        if (bindingResult.hasErrors()) {
            return "malwareReportPostForm";
        }

        Long reportId = malwareReportSaveService.saveMalwareReport(malwareId, malwareReportSaveDto, sessionMemberDetails.getMember());

        return "redirect:/malware/{malwareId}/report/"+reportId;
    }
}
