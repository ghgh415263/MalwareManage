package com.malclean.admin.controller.malwareassignment;

import com.malclean.admin.controller.assignmentcomment.AssignmentCommentListController;
import com.malclean.admin.controller.pagination.CustomPage;
import com.malclean.admin.entity.AssignmentComment;
import com.malclean.admin.entity.MalwareAssignment;
import com.malclean.admin.enumtype.AssignmentStatusType;
import com.malclean.admin.repository.malwareassignment.DslMalwareAssignmentRepository;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

@RequiredArgsConstructor
@Slf4j
@RestController
public class MalwareAssignmentListController {

    private final DslMalwareAssignmentRepository dslMalwareAssignmentRepository;
/*
    @GetMapping("/members/{memberId}/assignments")
    public CustomPage getList(@PathVariable Long memberId,
                              @RequestParam(required = false) Long lastAssignmentId) {

        List<AssignmentInPage> assignmentListInPageResponse =  dslMalwareAssignmentRepository.findAllByMemberId(memberId, lastAssignmentId, 10).stream()
                .map(assignment -> new AssignmentInPage(assignment))
                .collect(Collectors.toList());

        return new CustomPage(assignmentListInPageResponse);
    }*/

    @Getter
    public static class AssignmentInPage {

        private Long id;

        private String title;

        private AssignmentStatusType assignmentStatus;

        private LocalDateTime estimatedTime;

        public AssignmentInPage(MalwareAssignment assignment) {
            this.id = assignment.getId();
            this.title = assignment.getTitle();
            this.assignmentStatus = assignment.getAssignmentStatus();
            this.estimatedTime = assignment.getEstimatedTime();
        }
    }
}
