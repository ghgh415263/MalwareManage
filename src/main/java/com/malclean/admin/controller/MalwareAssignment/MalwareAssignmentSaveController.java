package com.malclean.admin.controller.MalwareAssignment;

import com.malclean.admin.security.CustomMemberDetails;
import com.malclean.admin.service.malwareAssignment.MalwareAssignmentSaveDto;
import com.malclean.admin.service.malwareAssignment.MalwareAssignmentSaveService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

@RequiredArgsConstructor
@Slf4j
@Controller
public class MalwareAssignmentSaveController {

    private final MalwareAssignmentSaveService malwareAssignmentSaveService;

    @GetMapping("/malwares/{malwareId}/assignments/create")
    public String malwareAssignmentSaveForm(@PathVariable Long malwareId, MalwareAssignmentSaveDto malwareAssignmentSaveDto) {
        return "malwareAssignmentPostForm";
    }

    @PostMapping("/malwares/{malwareId}/assignments/create")
    public String malwareAssignmentSave(@PathVariable Long malwareId, MalwareAssignmentSaveDto malwareAssignmentSaveDto, BindingResult bindingResult, @AuthenticationPrincipal CustomMemberDetails sessionMemberDetails) {

        if (bindingResult.hasErrors()) {
            return "malwareAssignmentPostForm";
        }

        Long malwareAssignmentId = malwareAssignmentSaveService.saveMalwareAssignment(malwareId, malwareAssignmentSaveDto, sessionMemberDetails.getUsername());
        return "redirect:/malwares/{malwareId}/assignments/" + malwareAssignmentId;
    }
}
