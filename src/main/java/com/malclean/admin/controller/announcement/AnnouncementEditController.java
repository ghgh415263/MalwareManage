package com.malclean.admin.controller.announcement;

import com.malclean.admin.controller.announcement.response.AnnouncementDetailResponse;
import com.malclean.admin.entity.Announcement;
import com.malclean.admin.security.CustomMemberDetails;
import com.malclean.admin.service.announcement.AnnouncementDetailService;
import com.malclean.admin.service.announcement.AnnouncementEditRequest;
import com.malclean.admin.service.announcement.AnnouncementEditService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

@RequiredArgsConstructor
@Slf4j
@Controller
public class AnnouncementEditController {

    private final AnnouncementEditService announcementEditService;

    private final AnnouncementDetailService announcementDetailService;

    @GetMapping("announcements/{announcementId}/edit")
    public String getEditForm(@PathVariable Long announcementId,
                           Model model) {

        Announcement announcement = announcementDetailService.getDetail(announcementId);
        AnnouncementDetailResponse announcementDetailResponse = new AnnouncementDetailResponse(announcement);
        model.addAttribute("announcementDetailResponse", announcementDetailResponse);

        return "announcementEditForm";
    }

    @PostMapping("announcements/{announcementId}/edit")
    public String edit(@PathVariable Long announcementId,
                       @ModelAttribute AnnouncementEditRequest announcementEditRequest,
                       @AuthenticationPrincipal CustomMemberDetails sessionMemberDetails) {

        announcementEditService.edit(announcementId, announcementEditRequest, sessionMemberDetails.getUsername());

        return "redirect:/announcements/{announcementId}";
    }

}
