package com.malclean.admin.ui.malware.malwarefile;

import com.malclean.admin.domain.malware.malware.MalwareMalwarefile;
import com.malclean.admin.domain.malware.malware.repository.DslMalwareMalwarefileRepository;
import com.malclean.admin.infrastructure.malware.malwarefile.store.LocalStoreManager;
import com.malclean.admin.infrastructure.malware.malwarefile.store.LocalStorePath;
import com.malclean.admin.domain.malware.malwarefile.service.StoreManager;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.util.UriUtils;

import java.nio.charset.StandardCharsets;

@RequiredArgsConstructor
@Slf4j
@Controller
public class MalwareFileDownloadController {

    private final DslMalwareMalwarefileRepository dslMalwareMalwarefileRepository;

    private final StoreManager localStoreManager = new LocalStoreManager(LocalStorePath.malwarefileDir);

    @GetMapping("/malwares/{malwareId}/malwarefiles/{malwareFileId}/download")
    public ResponseEntity<Resource> malwareFileDownload(@PathVariable Long malwareId, @PathVariable Long malwareFileId){

        MalwareMalwarefile malwareMalwareFile = dslMalwareMalwarefileRepository.findByMalwareIdAndMalwareFileId(malwareId, malwareFileId)
                .orElseThrow();

        Resource resource = localStoreManager.getResource(malwareMalwareFile.getMalwarefile().getStoreFilename());
        String encodedFileName = UriUtils.encode(malwareMalwareFile.getFilename(), StandardCharsets.UTF_8);

        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Disposition", "attachment; filename=" + encodedFileName);

        return new ResponseEntity<>(resource, headers, HttpStatus.OK);
    }
}
