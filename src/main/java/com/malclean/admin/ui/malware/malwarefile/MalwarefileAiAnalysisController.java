package com.malclean.admin.ui.malware.malwarefile;

import com.malclean.admin.application.malware.malwarefile.MalwareAiAnalysisService;
import com.malclean.admin.domain.malware.malwarefile.service.AnalysisModelListRes;
import com.malclean.admin.domain.malware.malwarefile.service.AnalysisModelClient;
import com.malclean.admin.domain.malware.malwarefile.service.AnalysisResultRes;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.ResponseBody;

@RequiredArgsConstructor
@Slf4j
@Controller
public class MalwarefileAiAnalysisController {

    private final MalwareAiAnalysisService malwareAiAnalysisService;

    private final AnalysisModelClient analysisModelClient;

    @GetMapping("/malwarefiles/{id}/analysis-models")
    public String analysisModels(@PathVariable Long id, Model model) { /*todo 파일마다 적용가능한 모델들이 다르다면 id를 이용해서 바꿀것*/
        AnalysisModelListRes response = analysisModelClient.findAnalysisModelList();
        model.addAttribute("analysisModelListResponse", response);
        return "malwareFileAnalyzeForm";
    }

    @ResponseBody
    @GetMapping("/malwarefiles/{malwarefileId}/analysis-models/{modelId}/analyze")
    public AnalysisResultRes malwareFileAnalysis(@PathVariable Long malwarefileId, @PathVariable Integer modelId) {
        return malwareAiAnalysisService.analyze(malwarefileId, modelId);
    }

}
