package com.malclean.admin.ui.malware.malware;

import com.malclean.admin.common.enummapper.EnumMapper;
import com.malclean.admin.ui.common.pagination.CustomPage;
import com.malclean.admin.dao.malware.malware.MalwareListDao;
import com.malclean.admin.dao.malware.malware.MalwareSearchRequest;
import com.malclean.admin.dao.malware.malware.MalwareInMalwareFilePage;
import com.malclean.admin.dao.malware.malware.MalwareInPage;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.ResponseBody;


@RequiredArgsConstructor
@Slf4j
@Controller
public class MalwareListController {

    private final MalwareListDao malwareListDao;

    private final EnumMapper enumMapper;

    @GetMapping("/malwares")
    public String malwareList(@ModelAttribute @Validated MalwareSearchRequest malwareSearchRequest,
                              @PageableDefault(size=10, sort="createdTime",direction = Sort.Direction.DESC) Pageable pageable,
                              Model model) {

        Page<MalwareInPage> paging = malwareListDao.findBySearch(malwareSearchRequest, pageable);

        CustomPage<MalwareInPage> pagingDto = new CustomPage<MalwareInPage>(paging.getContent(), paging.getPageable(), paging.getTotalElements());
        model.addAttribute("paging", pagingDto);
        model.addAttribute("RisknessType", enumMapper.getAsList("RisknessType"));

        return "malwareList";
    }

    @ResponseBody
    @GetMapping("/malwarefiles/{fileId}/malwares")
    public CustomPage malwareListByMalwareFileId(@PathVariable Long fileId,
                                                 @PageableDefault(size=1, sort="createdTime",direction = Sort.Direction.DESC) Pageable pageable) {

        Page<MalwareInMalwareFilePage> paging = malwareListDao.findByMalwareFileId(fileId, pageable);

        CustomPage<MalwareInMalwareFilePage> pagingDto = new CustomPage<MalwareInMalwareFilePage>(paging.getContent(), paging.getPageable(), paging.getTotalElements());

        return pagingDto;
    }
}
