package com.malclean.admin.ui.malware.malware;

import com.malclean.admin.common.pagination.CustomPage;
import com.malclean.admin.domain.malware.malware.Malware;
import com.malclean.admin.domain.malware.malware.requestdto.MalwareSearchRequest;
import com.malclean.admin.application.malware.malware.MalwareSearchService;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.web.PageableDefault;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;

import java.time.LocalDateTime;


@RequiredArgsConstructor
@Slf4j
@Controller
public class MalwareListController {

    private final MalwareSearchService malwareSearchService;

    @GetMapping("/malwares")
    public String malwareList(@ModelAttribute @Validated MalwareSearchRequest malwareSearchRequest,
                              @PageableDefault(size=10, sort="createdTime",direction = Sort.Direction.DESC) Pageable pageable,
                              Model model) {

        Page<MalwareInPage> paging = malwareSearchService.searchMalware(malwareSearchRequest, pageable)
                .map(malware -> new MalwareInPage(malware));

        CustomPage<MalwareInPage> pagingDto = new CustomPage<MalwareInPage>(paging.getContent(), paging.getPageable(), paging.getTotalElements());
        model.addAttribute("paging", pagingDto);

        return "malwareList";
    }

    @Getter
    public static class MalwareInPage {

        private Long id;

        private Long posterId;

        private String posterUsername;

        private String title;

        private String nickname;

        private String riskness;

        private LocalDateTime detectedTime;

        private LocalDateTime resolvedTime;

        public MalwareInPage(Malware malware) {
            this.id = malware.getId();
            this.posterId = malware.getPoster().getId();
            this.posterUsername = malware.getPoster().getUsername();
            this.title = malware.getTitle();
            this.nickname = malware.getNickname();
            this.riskness = malware.getRiskness().getDescription();
            this.detectedTime = malware.getDetectedTime();
            this.resolvedTime = malware.getResolvedTime();
        }
    }
}
