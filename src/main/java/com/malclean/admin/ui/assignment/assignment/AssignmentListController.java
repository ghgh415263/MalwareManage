package com.malclean.admin.ui.assignment.assignment;

import com.malclean.admin.ui.common.pagination.CustomPage;
import com.malclean.admin.domain.assignment.assignment.MalwareAssignment;
import com.malclean.admin.domain.assignment.assignment.AssignmentStatusType;
import com.malclean.admin.domain.assignment.assignment.DslMalwareAssignmentRepository;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

@RequiredArgsConstructor
@Slf4j
@RestController
public class AssignmentListController {

    private final DslMalwareAssignmentRepository dslMalwareAssignmentRepository;

    @GetMapping("/members/{memberId}/assignments")
    public CustomPage getList(@PathVariable Long memberId,
                              @RequestParam(required = false) Long lastAssignmentId) {

        List<AssignmentInPage> assignmentListInPageResponse =  dslMalwareAssignmentRepository.findByAssignerAndAssignee(memberId, lastAssignmentId, 10).stream()
                .map(assignment -> new AssignmentInPage(assignment, memberId))
                .collect(Collectors.toList());

        return new CustomPage(assignmentListInPageResponse);
    }

    @Getter
    static class AssignmentInPage {

        private Long id;

        private String title;

        private AssignmentStatusType assignmentStatus;

        private LocalDateTime estimatedTime;

        private Boolean isAssignedToMe;

        public AssignmentInPage(MalwareAssignment assignment, Long memberId) {
            this.isAssignedToMe = (assignment.getAssignerId() == memberId) ? true : false;
            this.id = assignment.getId();
            this.title = assignment.getTitle();
            this.assignmentStatus = assignment.getAssignmentStatus();
            this.estimatedTime = assignment.getEstimatedTime();
        }
    }
}
