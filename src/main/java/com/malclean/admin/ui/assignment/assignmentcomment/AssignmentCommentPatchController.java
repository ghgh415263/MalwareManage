package com.malclean.admin.ui.assignment.assignmentcomment;

import com.malclean.admin.ui.common.exception.InValidBindingException;
import com.malclean.admin.application.assignment.assignmentcomment.AssginmentCommentEditService;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

@RequiredArgsConstructor
@Slf4j
@Controller
public class AssignmentCommentPatchController {

    private final AssginmentCommentEditService assginmentCommentEditService;

    @PatchMapping("/comments/{commentId}")
    public ResponseEntity<?> edit(@PathVariable Long commentId,
                                  @RequestBody @Validated CommentEditRequest CommentEditRequest, BindingResult bindingResult,
                                  @SessionAttribute(name = "loginMemberId") Long loginMemberId) {

        if (bindingResult.hasErrors())
            throw new InValidBindingException(bindingResult);

        assginmentCommentEditService.edit(commentId, CommentEditRequest.getContent(), loginMemberId);

        return new ResponseEntity<>(HttpStatus.OK);
    }

    @Getter
    @NoArgsConstructor
    @AllArgsConstructor
    public static class CommentEditRequest {

        @NotBlank
        @Size(max=1000, message = "1000자 이하로 입력하세요.")
        private String content;

    }
}
