package com.malclean.admin.ui.assignment.assignment;

import com.malclean.admin.application.assignment.assignment.requestdto.AssignmentSaveReq;
import com.malclean.admin.application.assignment.assignment.AssignmentSaveService;
import com.malclean.admin.common.enummapper.EnumMapper;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@RequiredArgsConstructor
@Slf4j
@Controller
public class AssignmentSaveController {

    private final AssignmentSaveService assignmentSaveService;

    private final EnumMapper enumMapper;

    @GetMapping("/malwares/{malwareId}/assignments/create")
    public String getSaveForm(@PathVariable Long malwareId,
                              @ModelAttribute AssignmentSaveReq assignmentSaveReq,
                              Model model) {

        model.addAttribute("AssignmentStatusType", enumMapper.get("AssignmentStatusType"));
        model.addAttribute("malwareId", malwareId);
        return "malwareAssignment/malwareAssignmentPostForm";
    }

    @PostMapping("/malwares/{malwareId}/assignments/create")
    public String save(@PathVariable Long malwareId,
                       @Validated @ModelAttribute AssignmentSaveReq assignmentSaveReq, BindingResult bindingResult,
                       @SessionAttribute(name = "loginMemberId") Long loginMemberId,
                       Model model,
                       RedirectAttributes redirectAttributes) {

        if (bindingResult.hasErrors()) {
            model.addAttribute("AssignmentStatusType", enumMapper.get("AssignmentStatusType"));
            model.addAttribute("malwareId", malwareId);
            return "malwareAssignment/malwareAssignmentPostForm";
        }

        Long malwareAssignmentId = assignmentSaveService.saveMalwareAssignment(malwareId, assignmentSaveReq, loginMemberId);
        redirectAttributes.addAttribute("id", malwareAssignmentId);
        return "redirect:/assignments/{id}";
    }
}
