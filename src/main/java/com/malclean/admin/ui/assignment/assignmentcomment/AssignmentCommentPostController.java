package com.malclean.admin.ui.assignment.assignmentcomment;

import com.malclean.admin.InValidParameterException;
import com.malclean.admin.application.assignment.assignmentcomment.AssignmentCommentSaveService;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;

@RequiredArgsConstructor
@Slf4j
@RestController
public class AssignmentCommentPostController {

    private final AssignmentCommentSaveService assignmentCommentSaveService;

    @PostMapping("/assignments/{assignmentId}/comments/create")
    public ResponseEntity<?> save(@PathVariable Long assignmentId,
                                       @RequestBody @Validated CommentSaveRequest commentSaveRequest, BindingResult bindingResult){

        if (bindingResult.hasErrors())
            throw new InValidParameterException(bindingResult);

        assignmentCommentSaveService.saveAssignmentComment(assignmentId, commentSaveRequest.getContent());

        return ResponseEntity.ok().build();
    }

    @Getter
    @NoArgsConstructor
    public static class CommentSaveRequest {

        @NotBlank
        @Size(max=1000, message = "1000자 이하로 입력하세요.")
        private String content;

    }
}
