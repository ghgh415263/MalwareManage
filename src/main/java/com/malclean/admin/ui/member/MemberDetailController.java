package com.malclean.admin.ui.member;

import com.malclean.admin.application.member.MemberDetailService;
import com.malclean.admin.domain.member.AuthorityType;
import com.malclean.admin.domain.member.Member;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.SessionAttribute;

@RequiredArgsConstructor
@Slf4j
@Controller
public class MemberDetailController {

    private final MemberDetailService memberDetailService;

    @GetMapping("/members/{wantedMemberId}")
    public String getDetail(@PathVariable Long wantedMemberId,
                            @SessionAttribute(name = "loginMemberId") Long loginMemberId,
                            Model model) {

        Member member = memberDetailService.findMember(wantedMemberId);
        MemberPageResponse response = new MemberPageResponse(member);
        model.addAttribute("memberPageResponse", response);
        return "memberDetail";
    }

    @Getter
    static class MemberPageResponse {

        private String username;

        private AuthorityType authority;

        public MemberPageResponse(Member member) {
            this.username = member.getUsername();
            this.authority = member.getAuthority();
        }
    }

    @GetMapping("/mypage")
    public String getMyDetail(@SessionAttribute(name = "loginMemberId") Long loginMemberId,
                                  Model model) {

        Member member = memberDetailService.findMember(loginMemberId);
        MyPageResponse response = new MyPageResponse(member);
        model.addAttribute("memberPageResponse", response);
        return "memberDetail";
    }

    @Getter
    static class MyPageResponse {

        private String username;

        private AuthorityType authority;

        public MyPageResponse(Member member) {
            this.username = member.getUsername();
            this.authority = member.getAuthority();
        }
    }
}
