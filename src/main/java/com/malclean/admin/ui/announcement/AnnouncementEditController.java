package com.malclean.admin.ui.announcement;

import com.malclean.admin.infrastructure.announcement.DslAnnouncementRepository;
import com.malclean.admin.ui.announcement.responsedto.AnnouncementDetailResponse;
import com.malclean.admin.domain.announcement.Announcement;
import com.malclean.admin.application.announcement.requestdto.AnnouncementEditRequest;
import com.malclean.admin.application.announcement.AnnouncementEditService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.persistence.EntityNotFoundException;

@RequiredArgsConstructor
@Slf4j
@Controller
public class AnnouncementEditController {

    private final AnnouncementEditService announcementEditService;

    private final DslAnnouncementRepository dslAnnouncementRepository;

    @GetMapping("announcements/{announcementId}/edit")
    public String getEditForm(@PathVariable Long announcementId,
                              Model model) {

        Announcement announcement = dslAnnouncementRepository.findByIdWithMember(announcementId)
                .orElseThrow(() -> new EntityNotFoundException(""));
        AnnouncementDetailResponse announcementDetailResponse = new AnnouncementDetailResponse(announcement);
        model.addAttribute("announcementDetailResponse", announcementDetailResponse);

        return "announcementEditForm";
    }

    @PostMapping("announcements/{announcementId}/edit")
    public String edit(@PathVariable Long announcementId,
                       @ModelAttribute @Validated AnnouncementEditRequest announcementEditRequest, BindingResult bindingResult,
                       @SessionAttribute(name = "loginMemberId", required = false) Long loginMemberId) {

        if (bindingResult.hasErrors())
            return "announcementEditForm";

        announcementEditService.edit(announcementId, announcementEditRequest, loginMemberId);

        return "redirect:/announcements/{announcementId}";
    }


}
