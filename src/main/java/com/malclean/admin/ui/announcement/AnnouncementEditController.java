package com.malclean.admin.ui.announcement;

import com.malclean.admin.common.enummapper.EnumMapper;
import com.malclean.admin.dao.announcement.AnnouncementDetailDao;
import com.malclean.admin.dao.announcement.responsedto.AnnouncementDetailResponse;
import com.malclean.admin.application.announcement.requestdto.AnnouncementEditReq;
import com.malclean.admin.application.announcement.AnnouncementEditService;
import com.malclean.admin.ui.common.exception.EntityPageNotFoundException;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

@RequiredArgsConstructor
@Slf4j
@Controller
public class AnnouncementEditController {

    private final AnnouncementEditService announcementEditService;

    private final AnnouncementDetailDao announcementDetailDao;

    private final EnumMapper enumMapper;

    @GetMapping("announcements/{announcementId}/edit")
    public String getEditForm(@PathVariable Long announcementId,
                              Model model) {

        AnnouncementDetailResponse announcementDetailResponse = announcementDetailDao.findDetail(announcementId)
                .orElseThrow(EntityPageNotFoundException::new);

        model.addAttribute("announcementDetailResponse", announcementDetailResponse);
        model.addAttribute("AnnouncementStatusType", enumMapper.get("AnnouncementStatusType"));

        return "announcementEditForm";
    }

    @PostMapping("announcements/{announcementId}/edit")
    public String edit(@PathVariable Long announcementId,
                       @ModelAttribute @Validated AnnouncementEditReq announcementEditReq, BindingResult bindingResult,
                       @SessionAttribute(name = "loginMemberId") Long loginMemberId, Model model) {

        if (bindingResult.hasErrors()) {
            model.addAttribute("AnnouncementStatusType", enumMapper.get("AnnouncementStatusType"));
            return "announcementEditForm";
        }

        announcementEditService.edit(announcementId, announcementEditReq, loginMemberId);

        return "redirect:/announcements/{announcementId}";
    }


}
