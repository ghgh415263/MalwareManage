package com.malclean.admin.infrastructure.announcement;

import com.malclean.admin.dao.announcement.AnnouncementDetailDao;
import com.malclean.admin.dao.announcement.responsedto.AnnouncementDetailRes;
import com.querydsl.core.types.Projections;
import com.querydsl.jpa.impl.JPAQueryFactory;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;
import java.util.Optional;

import static com.malclean.admin.domain.announcement.QAnnouncement.announcement;
import static com.malclean.admin.domain.member.QMember.member;

@Slf4j
@Repository
public class AnnouncementDetailDaoImpl implements AnnouncementDetailDao {

    private final JPAQueryFactory query;

    public AnnouncementDetailDaoImpl(JPAQueryFactory jpaQueryFactory){
        this.query = jpaQueryFactory;
    }

    public Optional<AnnouncementDetailRes> findDetail(Long id){
        return Optional.ofNullable(query
                .select(Projections.constructor(AnnouncementDetailRes.class, announcement, member.username, member.id))
                .from(announcement)
                .innerJoin(member)
                .on(announcement.createdBy.eq(member.id))
                .where(announcement.announcementId.eq(id))
                .fetchOne()
        );
    }
}
