package com.malclean.admin.infrastructure.assignment.assignment;

import com.malclean.admin.dao.assignment.assignment.AssignmentDetailResponse;
import com.malclean.admin.dao.assignment.assignment.AssignmentDetailDao;
import lombok.RequiredArgsConstructor;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@RequiredArgsConstructor
@Repository
public class AssignmentDetailDaoImpl implements AssignmentDetailDao {

    private final JdbcTemplate jdbcTemplate;

    @Override
    public Optional<AssignmentDetailResponse> getDetail(Long id) {

        String sql =
                "select " +
                "   assignment.id as assignment_id, " +
                "   assignment.assigner_id as assigner_id, " +
                "   assigner.username as assigner_username, " +
                "   assignment.assignee_id as assignee_id, " +
                "   assignee.username as assignee_username, " +
                "   assignment.malware_id, " +
                "   malware.title as malware_title, " +
                "   malware.nickname as malware_nickname, " +
                "   assignment.title as assignment_title, " +
                "   assignment.content as assignment_content, " +
                "   assignment.assignment_status, " +
                "   assignment.estimated_time, " +
                "   attachment.id as attachment_id, " +
                "   attachment.filename as attachment_filename, " +
                "   attachment.created_by as attachment_uploader_id, " +
                "   uploader.username as uploader_username " +
                "from " +
                "   malware_assignment assignment " +
                "   left join member assigner on assigner_id = assigner.id " +
                "   left join member assignee on assignee_id = assignee.id " +
                "   left join malware malware on malware_id = malware.id " +
                "   left join assignment_attachment attachment on assignment.id = attachment.assignment_id " +
                "   left join member uploader on attachment.created_by = uploader.id " +
                "where assignment.id = ?";

        List<AssignmentDetailResponse> assignmentDetailResponse = jdbcTemplate.query(sql, rowMapper(), id);

        return Optional.ofNullable(assignmentDetailResponse.size() > 0? assignmentDetailResponse.get(0): null);
    }

    private RowMapper<AssignmentDetailResponse> rowMapper(){
        return ((rs, rowNum)-> {

            List<AssignmentDetailResponse.AssignmentAttachmentResponse> attachments = new ArrayList<>();
            if (rs.getString("attachment_filename") != null) {
                addAttachmentRes(rs, attachments);
            }

            AssignmentDetailResponse response = new AssignmentDetailResponse(
                    rs.getLong("assignment_id"),
                    rs.getLong("assigner_id"),
                    rs.getString("assigner_username"),
                    rs.getLong("assignee_id"),
                    rs.getString("assignee_username"),
                    rs.getLong("malware_id"),
                    rs.getString("malware_title"),
                    rs.getString("malware_nickname"),
                    rs.getString("assignment_title"),
                    rs.getString("assignment_content"),
                    rs.getString("assignment_status"),
                    rs.getObject("estimated_time", LocalDateTime.class),
                    attachments
            );

            while(rs.next()) {
                addAttachmentRes(rs, attachments);
            }
            return response;
        });
    }

    private static void addAttachmentRes(ResultSet rs, List<AssignmentDetailResponse.AssignmentAttachmentResponse> attachments) throws SQLException {
        attachments.add(
                new AssignmentDetailResponse.AssignmentAttachmentResponse(
                        rs.getLong("attachment_id"),
                        rs.getLong("attachment_uploader_id"),
                        rs.getString("uploader_username"),
                        rs.getString("attachment_filename")
                )
        );
    }
}
