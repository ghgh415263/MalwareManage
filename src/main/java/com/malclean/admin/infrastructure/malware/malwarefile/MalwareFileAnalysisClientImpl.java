package com.malclean.admin.infrastructure.malware.malwarefile;

import com.malclean.admin.domain.malware.malwarefile.service.MalwareFileAnalysisClient;
import com.malclean.admin.domain.malware.malwarefile.service.AnalysisResultRes;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;
import reactor.core.publisher.Mono;

@RequiredArgsConstructor
@Service
public class MalwareFileAnalysisClientImpl implements MalwareFileAnalysisClient {

    private final WebClient webClient;

    @Autowired
    public MalwareFileAnalysisClientImpl(WebClient.Builder webClientBuilder) {
        webClient = webClientBuilder.build();
    }

    @Override
    public AnalysisResultRes analyzeMalwareFile(String storeFilename, Integer modelId) {

        AnalysisApiRequest analysisApiRequest = new AnalysisApiRequest(storeFilename, modelId);

        AnalysisResultRes analysisResultRes = webClient.post()
                .uri("/analyze")
                .body(Mono.just(analysisApiRequest), AnalysisApiRequest.class)
                .retrieve()
                .bodyToMono(AnalysisResultRes.class)
                .block();

        return analysisResultRes;
    }

    @Getter
    static class AnalysisApiRequest {
        String storeFilename;
        Integer analysisModelId;

        public AnalysisApiRequest(String storeFilename, Integer analysisModelId) {
            this.storeFilename = storeFilename;
            this.analysisModelId = analysisModelId;
        }
    }
}
