package com.malclean.admin.repository;

import com.malclean.admin.entity.MalwareMalwareFileMap;
import com.malclean.admin.entity.QMalware;
import com.malclean.admin.entity.QMalwareFile;
import com.malclean.admin.entity.QMalwareMalwareFileMap;
import com.querydsl.jpa.impl.JPAQueryFactory;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.PageImpl;
import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;
import java.util.List;

@Slf4j
@Repository
public class DslMalwareMalwareFileMapRepository {

    private final EntityManager em;
    private final JPAQueryFactory query;

    public DslMalwareMalwareFileMapRepository(EntityManager em){
        this.em = em;
        this.query = new JPAQueryFactory(em);
    }

    public List<MalwareMalwareFileMap> findAllByMalwareFileId(Long malwareFileId, Pageable pageable) {

        List<MalwareMalwareFileMap> malwareMalwareFileMapList = query
                .select(QMalwareMalwareFileMap.malwareMalwareFileMap)
                .from(QMalwareMalwareFileMap.malwareMalwareFileMap)
                .leftJoin(QMalwareMalwareFileMap.malwareMalwareFileMap.malwareFile, QMalwareFile.malwareFile)
                .leftJoin(QMalwareMalwareFileMap.malwareMalwareFileMap.malware, QMalware.malware)
                .where(QMalwareMalwareFileMap.malwareMalwareFileMap.malwareFile.id.eq(malwareFileId))
                .offset(pageable.getOffset())
                .limit(pageable.getPageSize())
                .fetch();

        return malwareMalwareFileMapList;
    }
}
