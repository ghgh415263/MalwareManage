package com.malclean.admin.repository.assignmentattachment;

import com.malclean.admin.entity.AssignmentAttachment;
import com.malclean.admin.entity.QAssignmentAttachment;
import com.malclean.admin.entity.QMalwareAssignment;
import com.malclean.admin.entity.QMember;
import com.malclean.admin.entity.malware.QMalware;
import com.querydsl.core.BooleanBuilder;
import com.querydsl.jpa.impl.JPAQueryFactory;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;
import java.util.List;

@Slf4j
@Repository
public class DslAssignmentAttachmentRepository {

    private final EntityManager em;
    private final JPAQueryFactory query;

    public DslAssignmentAttachmentRepository(EntityManager em){
        this.em = em;
        this.query = new JPAQueryFactory(em);
    }

    public List<AssignmentAttachment> findAll(Long assignmentId, Long attachmentId, Integer pageSize){

        BooleanBuilder dynamicLtId = new BooleanBuilder();

        if (attachmentId != null) {
            dynamicLtId.and(QAssignmentAttachment.assignmentAttachment.id.lt(attachmentId));
        }

        return query
                .select(QAssignmentAttachment.assignmentAttachment)
                .from(QAssignmentAttachment.assignmentAttachment)
                .innerJoin(QAssignmentAttachment.assignmentAttachment.uploader, QMember.member).fetchJoin()
                .where(QAssignmentAttachment.assignmentAttachment.malwareAssignment.id.eq(assignmentId), dynamicLtId)
                .orderBy(QAssignmentAttachment.assignmentAttachment.id.desc())
                .limit(pageSize)
                .fetch();
    }
}
