package com.malclean.admin.malware.application.malware.requestdto;

import com.malclean.admin.malware.domain.malware.enums.BehaviorType;
import com.malclean.admin.malware.domain.malware.enums.PurposeType;
import lombok.Builder;
import lombok.Getter;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Getter
public class MalwareSaveRequest {

    @NotBlank
    private String title;

    @NotBlank
    private String content;

    @NotBlank
    private String nickname;

    @NotBlank
    private String riskness;

    /*todo null이들어올때*/
    private List<MultipartFile> multipartFileList;
    private List<PurposeType> purposeList;
    private List<BehaviorType> behaviorList;

    @NotNull
    @DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm")
    private LocalDateTime detectedTime;

    @DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm")
    private LocalDateTime resolvedTime;

    @Builder
    public MalwareSaveRequest(String title, String content, String nickname, String riskness,
                              List<MultipartFile> multipartFileList, List<String> purposeList, List<String> behaviorList,
                              LocalDateTime detectedTime, LocalDateTime resolvedTime) {

        this.title = title;
        this.content = content;
        this.nickname = nickname;
        this.riskness = riskness;
        this.multipartFileList = multipartFileList;
        this.purposeList = (purposeList == null)? new ArrayList<>():purposeList.stream().map(purpose -> PurposeType.valueOf(purpose)).collect(Collectors.toList());
        this.behaviorList = (behaviorList == null)? new ArrayList<>():behaviorList.stream().map(behavior -> BehaviorType.valueOf(behavior)).collect(Collectors.toList());
        this.detectedTime = detectedTime;
        this.resolvedTime = resolvedTime;
    }
}
