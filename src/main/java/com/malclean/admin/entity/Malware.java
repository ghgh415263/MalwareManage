package com.malclean.admin.entity;

import lombok.AccessLevel;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Entity
@Getter
@NoArgsConstructor(access = AccessLevel.PROTECTED)
public class Malware extends BaseTimeEntity{

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)  //DB가 내부에서 처리해주는 값
    private Long id;

    @ManyToOne
    @JoinColumn(name = "poster_id")
    private Member poster;

    private String title;
    private String content;
    private String nickname;
    private String riskness;

    @OneToMany(mappedBy = "malware", cascade = CascadeType.ALL)
    private List<MalwarePurpose> purposeList = new ArrayList<>();
    @OneToMany(mappedBy = "malware", cascade = CascadeType.ALL)
    private List<MalwareBehavior> behaviorList = new ArrayList<>();
    @OneToMany(mappedBy = "malware", cascade = CascadeType.ALL)
    private List<MalwareFile> malwareFileList = new ArrayList<>();

    private LocalDateTime detectedTime;
    private LocalDateTime resolvedTime;

    @Builder
    public Malware(Member poster, String title, String content, String nickname, String riskness,
                   List<MalwarePurpose> purposeList, List<MalwareBehavior> behaviorList,
                   LocalDateTime detectedTime, LocalDateTime resolvedTime) {

        this.poster = poster;
        this.title = title;
        this.content = content;
        this.nickname = nickname;
        this.riskness = riskness;
        this.purposeList = purposeList;
        this.behaviorList = behaviorList;
        this.detectedTime = detectedTime;
        this.resolvedTime = resolvedTime;
    }

    public void addMalwareFile(MalwareFile malwareFile) {
        malwareFileList.add(malwareFile);
        malwareFile.setMalware(this);
    }

    public void addPurpose(MalwarePurpose purpose) {
        purposeList.add(purpose);
        purpose.setMalware(this);
    }

    public void addBehavior(MalwareBehavior behavior) {
        behaviorList.add(behavior);
        behavior.setMalware(this);
    }
}
