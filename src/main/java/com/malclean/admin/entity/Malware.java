package com.malclean.admin.entity;

import com.malclean.admin.enumtype.RisknessType;
import lombok.AccessLevel;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Entity
@Getter
@NoArgsConstructor(access = AccessLevel.PROTECTED)
@Table(
        uniqueConstraints = {
                @UniqueConstraint(columnNames = { "title" }),
                @UniqueConstraint(columnNames = { "nickname" })
        }
)
public class Malware extends BaseEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)  //DB가 내부에서 처리해주는 값
    private Long id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "poster_id")
    private Member poster;

    private String title;

    private String content;

    private String nickname;

    @Enumerated(EnumType.STRING)
    private RisknessType riskness;

    private LocalDateTime detectedTime;
    private LocalDateTime resolvedTime;

    @Builder
    private Malware(Member poster, String title, String content, String nickname, RisknessType riskness,
                   LocalDateTime detectedTime, LocalDateTime resolvedTime) {

        this.poster = poster;
        this.title = title;
        this.content = content;
        this.nickname = nickname;
        this.riskness = riskness;
        this.detectedTime = detectedTime;
        this.resolvedTime = resolvedTime;
    }

    /*
    public void addPurpose(MalwarePurpose purpose) {
        malwarePurposeList.add(purpose);
        purpose.setMalware(this);
    }

    public void addBehavior(MalwareBehavior behavior) {
        malwareBehaviorList.add(behavior);
        behavior.setMalware(this);
    }*/
}
