package com.malclean.admin.application.malware.malware;

import com.malclean.admin.application.malware.malware.requestdto.MalwareSaveRequest;
import com.malclean.admin.application.malware.malwarefile.MalwareFileSaveService;
import com.malclean.admin.domain.malware.malware.Malware;
import com.malclean.admin.domain.malware.malware.enums.RisknessType;
import com.malclean.admin.domain.malware.malware.repository.MalwareRepository;
import com.malclean.admin.infrastructure.member.MemberRepository;
import com.malclean.admin.domain.member.Member;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@RequiredArgsConstructor
@Slf4j
@Service
public class MalwareSaveService {

    private final MalwareRepository malwareRepository;

    private final MalwareFileSaveService malwareFileSaveService;

    private final MemberRepository memberRepository;


    @Transactional
    public Long saveMalware(MalwareSaveRequest malwareSaveRequest, Long loginMemberId) {

        Member sessionMember = memberRepository.findById(loginMemberId)
                .orElseThrow();

        Malware malware = Malware.builder()
                .poster(sessionMember)
                .title(malwareSaveRequest.getTitle())
                .content(malwareSaveRequest.getContent())
                .nickname(malwareSaveRequest.getNickname())
                .riskness(RisknessType.toEnumType(malwareSaveRequest.getRiskness()))
                .malwarePurposeList(malwareSaveRequest.getPurposeList())
                .malwareBehaviorList(malwareSaveRequest.getBehaviorList())
                .detectedTime(malwareSaveRequest.getDetectedTime())
                .resolvedTime(malwareSaveRequest.getResolvedTime())
                .build();


        malwareRepository.save(malware);

        malwareFileSaveService.saveMalwareFileList(malware, sessionMember, malwareSaveRequest.getMultipartFileList());

        return malware.getId();
    }
}
