package com.malclean.admin.application.malware.malware;

import com.malclean.admin.domain.malware.malware.Malware;
import com.malclean.admin.domain.malware.malware.MalwareMalwarefile;
import com.malclean.admin.domain.malware.malware.repository.MalwareMalwarefileBulkRepository;
import com.malclean.admin.domain.malware.malwarefile.Malwarefile;
import com.malclean.admin.domain.malware.malwarefile.MalwarefileRepository;
import com.malclean.admin.domain.malware.malwarefile.SignatureMultipartfileMap;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import java.util.stream.Collectors;

@RequiredArgsConstructor
@Slf4j
@Service
public class MalwareMalwarefileSaveService {

    private final MalwareMalwarefileBulkRepository malwareMalwareFileBulkRepository;

    private final MalwarefileRepository malwarefileRepository;

    public void saveAll(SignatureMultipartfileMap signatureMultipartfileMap, Malware malware, Long loginMemberId) {

        List<Malwarefile> malwarefileList = malwarefileRepository.findBySignatureIn(signatureMultipartfileMap.getSignatureList());

        List<MalwareMalwarefile> malwareMalwarefileList = malwarefileList.stream().map(
                malwareFile -> {
                    MultipartFile multipartFile = signatureMultipartfileMap.get(malwareFile.getSignature());
                    return MalwareMalwarefile.builder()
                            .malwarefile(malwareFile)
                            .malware(malware)
                            .filename(multipartFile.getOriginalFilename())
                            .build();
                }).collect(Collectors.toList());

        malwareMalwareFileBulkRepository.saveAll(malwareMalwarefileList, loginMemberId);
    }

}
