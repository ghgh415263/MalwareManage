package com.malclean.admin.application.announcement;

import com.malclean.admin.application.announcement.requestdto.AnnouncementEditRequest;
import com.malclean.admin.domain.announcement.Announcement;
import com.malclean.admin.domain.announcement.AnnouncementPermissionService;
import com.malclean.admin.domain.announcement.enums.AnnouncementStatusType;
import com.malclean.admin.infrastructure.announcement.AnnouncementRepository;
import com.malclean.admin.domain.member.Member;
import com.malclean.admin.infrastructure.member.MemberRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityNotFoundException;

@RequiredArgsConstructor
@Slf4j
@Service
public class AnnouncementEditService {

    private final AnnouncementRepository AnnouncementRepository;

    private final MemberRepository memberRepository;

    private final AnnouncementPermissionService announcementPermissionService;

    @Transactional
    public void edit(Long announcementId, AnnouncementEditRequest announcementEditRequest, Long sessionMemberId) {

        Member sessionMember = memberRepository.findById(sessionMemberId)
                .orElseThrow(()->new EntityNotFoundException());

        announcementPermissionService.checkAdminPermission(sessionMember);

        Announcement announcement = AnnouncementRepository.findById(announcementId)
                .orElseThrow(() -> new EntityNotFoundException());

        AnnouncementStatusType newAnnouncementStatusType = AnnouncementStatusType.toEnumType(announcementEditRequest.getAnnouncementStatus());

        announcement.edit(announcementEditRequest.getTitle(), announcementEditRequest.getContent(), newAnnouncementStatusType, announcementEditRequest.getVersion());
    }
}
