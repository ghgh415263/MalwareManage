package com.malclean.admin.application.announcement;

import com.malclean.admin.application.announcement.requestdto.AnnouncementEditRequest;
import com.malclean.admin.domain.announcement.Announcement;
import com.malclean.admin.domain.announcement.AnnouncementPermissionService;
import com.malclean.admin.domain.announcement.AnnouncementRepository;
import com.malclean.admin.domain.announcement.enums.AnnouncementStatusType;
import com.malclean.admin.common.exception.VersionConflictException;
import com.malclean.admin.domain.member.Member;
import com.malclean.admin.domain.member.MemberRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityNotFoundException;

@RequiredArgsConstructor
@Slf4j
@Service
public class AnnouncementEditService {

    private final AnnouncementRepository announcementRepository;

    private final MemberRepository memberRepository;

    private final AnnouncementPermissionService announcementPermissionService;

    @Transactional
    public void edit(Long announcementId, AnnouncementEditRequest announcementEditRequest, Long sessionMemberId) {

        Member sessionMember = memberRepository.findById(sessionMemberId)
                .orElseThrow(()->new EntityNotFoundException());

        announcementPermissionService.checkAdminPermission(sessionMember);

        Announcement announcement = announcementRepository.findWithOptimisticLockByAnnouncementId(announcementId)
                .orElseThrow(() -> new EntityNotFoundException());

        if (!announcement.matchVersion(announcementEditRequest.getVersion())) {
            throw new VersionConflictException("한번 더 수정되었습니다.");
        }

        AnnouncementStatusType newAnnouncementStatusType = AnnouncementStatusType.toEnumType(announcementEditRequest.getAnnouncementStatus());

        announcement.edit(announcementEditRequest.getTitle(), announcementEditRequest.getContent(), newAnnouncementStatusType);

    }
}
