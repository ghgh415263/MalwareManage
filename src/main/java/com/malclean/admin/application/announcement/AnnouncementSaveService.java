package com.malclean.admin.application.announcement;

import com.malclean.admin.application.announcement.requestdto.AnnouncementSaveRequest;
import com.malclean.admin.application.common.exception.NotExistSessionException;
import com.malclean.admin.domain.announcement.Announcement;
import com.malclean.admin.domain.announcement.AnnouncementPermissionService;
import com.malclean.admin.domain.announcement.enums.AnnouncementStatusType;
import com.malclean.admin.domain.member.Member;
import com.malclean.admin.domain.announcement.AnnouncementRepository;
import com.malclean.admin.domain.member.MemberRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@RequiredArgsConstructor
@Slf4j
@Service
public class AnnouncementSaveService {

    private final AnnouncementRepository announcementRepository;

    private final MemberRepository memberRepository;

    private final AnnouncementPermissionService announcementPermissionService;

    @Transactional
    public Long save(AnnouncementSaveRequest announcementSaveRequest, Long loginMemberId) {

        Member sessionMember = memberRepository.findById(loginMemberId)
                .orElseThrow(NotExistSessionException::new);

        announcementPermissionService.checkAdminPermission(sessionMember);

        AnnouncementStatusType announcementStatusType = AnnouncementStatusType.toEnumType(announcementSaveRequest.getAnnouncementStatus());

        Announcement announcement = new Announcement(announcementSaveRequest.getTitle(), announcementSaveRequest.getContent(), announcementStatusType);

        return announcementRepository.save(announcement).getAnnouncementId();
    }

}
