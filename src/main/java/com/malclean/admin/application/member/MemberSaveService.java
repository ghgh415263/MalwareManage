package com.malclean.admin.application.member;

import com.malclean.admin.application.member.requestdto.MemberSaveRequest;
import com.malclean.admin.domain.member.AuthorityType;
import com.malclean.admin.domain.member.Member;
import com.malclean.admin.infrastructure.member.MemberRepository;
import com.malclean.admin.infrastructure.member.PasswordEncoder;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@RequiredArgsConstructor
@Slf4j
@Service
public class MemberSaveService {

    private final MemberRepository memberRepository;

    private final PasswordEncoder passwordEncoder;

    @Transactional
    public void saveMember(MemberSaveRequest memberSaveRequest) {

        String encodedPassword = passwordEncoder.encode(memberSaveRequest.getPassword());

        AuthorityType authorityType = AuthorityType.toEnumType(memberSaveRequest.getAuthority());

        Member newMember = Member.builder()
                .username(memberSaveRequest.getUsername())
                .password(encodedPassword)
                .authority(authorityType)
                .employeeId(memberSaveRequest.getEmployeeId())
                .build();

        memberRepository.save(newMember);
    }
}
