package com.malclean.admin.application.assignment.assignmentcomment;

import com.malclean.admin.domain.assignment.assignmentcomment.AssignmentComment;
import com.malclean.admin.domain.member.Member;
import com.malclean.admin.common.exception.NoAuthorityForEntity;
import com.malclean.admin.domain.assignment.assignmentcomment.AssignmentCommentRepository;
import com.malclean.admin.domain.assignment.assignmentcomment.DslAssignmentCommentRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityNotFoundException;

@RequiredArgsConstructor
@Slf4j
@Service
public class AssignmentCommentRemoveService {

    private final AssignmentCommentRepository assignmentCommentRepository;

    private final DslAssignmentCommentRepository dslAssignmentCommentRepository;

    @Transactional
    public void remove(Long id, Long loginMemberId){

        AssignmentComment assignmentComment = dslAssignmentCommentRepository.findByIdWithMember(id)
                .orElseThrow(() -> new EntityNotFoundException());

        Member writer = assignmentComment.getWriter();
        if (writer.getId() != loginMemberId ) {
            throw new NoAuthorityForEntity("댓글에 대한 삭제 권한이 없습니다.");
        }

        assignmentCommentRepository.delete(assignmentComment);
    }
}
