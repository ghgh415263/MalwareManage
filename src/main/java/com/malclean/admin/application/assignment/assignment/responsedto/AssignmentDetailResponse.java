package com.malclean.admin.application.assignment.assignment.responsedto;

import com.malclean.admin.domain.assignment.assignment.AssignmentAttachment;
import com.malclean.admin.domain.assignment.assignment.MalwareAssignment;
import com.malclean.admin.domain.assignment.assignment.AssignmentStatusType;
import lombok.Getter;
import org.springframework.format.annotation.DateTimeFormat;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

@Getter
public class AssignmentDetailResponse {

    private Long assignerId;

    private String assignerUsername;

    private Long assigneeId;

    private String assigneeUsername;

    private Long malwareId;

    private String malwareNickname;

    private String malwareTitle;

    private String title;

    private String content;

    private AssignmentStatusType assignmentStatus;

    @DateTimeFormat(pattern="yyyy-MM-dd'T'HH:mm")
    private LocalDateTime estimatedTime;

    private List<AssignmentAttachmentResponse> assignmentAttachmentResponseList;

    public AssignmentDetailResponse(MalwareAssignment malwareAssignment, List<AssignmentAttachment> assignmentAttachmentList) {
        this.assignerId = malwareAssignment.getAssigner().getId();
        this.assignerUsername = malwareAssignment.getAssigner().getUsername();
        this.assigneeId = malwareAssignment.getAssignee().getId();
        this.assigneeUsername = malwareAssignment.getAssignee().getUsername();
        this.malwareId = malwareAssignment.getMalware().getId();
        this.malwareNickname = malwareAssignment.getMalware().getNickname();
        this.malwareTitle = malwareAssignment.getMalware().getTitle();
        this.title = malwareAssignment.getTitle();
        this.content = malwareAssignment.getContent();
        this.assignmentStatus = malwareAssignment.getAssignmentStatus();
        this.estimatedTime = malwareAssignment.getEstimatedTime();

        this.assignmentAttachmentResponseList = assignmentAttachmentList.stream().map(assignmentAttachment -> new AssignmentAttachmentResponse(assignmentAttachment)).collect(Collectors.toList());
    }

    @Getter
    static class AssignmentAttachmentResponse {

        private Long id;

        private Long uploaderId;

        private String uploaderUsername;

        private String filename;

        public AssignmentAttachmentResponse(AssignmentAttachment assignmentAttachment) {
            this.id = assignmentAttachment.getId();
            this.uploaderId = assignmentAttachment.getUploader().getId();
            this.uploaderUsername = assignmentAttachment.getUploader().getUsername();
            this.filename = assignmentAttachment.getFilename();
        }
    }
}
