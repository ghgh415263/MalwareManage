package com.malclean.admin.application.assignment.assignmentcomment;

import com.malclean.admin.domain.assignment.AssignmentCommentPermissionService;
import com.malclean.admin.domain.assignment.assignmentcomment.AssignmentComment;
import com.malclean.admin.domain.member.Member;
import com.malclean.admin.common.exception.NoAuthorityForEntity;
import com.malclean.admin.infrastructure.assignment.assignmentcomment.AssignmentCommentRepository;
import com.malclean.admin.infrastructure.assignment.assignmentcomment.DslAssignmentCommentRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityNotFoundException;

@RequiredArgsConstructor
@Slf4j
@Service
public class AssginmentCommentEditService {

    private final DslAssignmentCommentRepository dslAssignmentCommentRepository;

    private final AssignmentCommentPermissionService permissionService;
    @Transactional
    public AssignmentComment get(Long commentId, Long loginMemberId){
        AssignmentComment assignmentComment = dslAssignmentCommentRepository.findByIdWithMember(commentId)
                .orElseThrow(() -> new EntityNotFoundException());

        permissionService.checkEditPermission(loginMemberId, assignmentComment.getWriter().getId());

        return assignmentComment;
    }

    @Transactional
    public void edit(Long commentId, String newContent, Long loginMemberId) {

        AssignmentComment assignmentComment = dslAssignmentCommentRepository.findByIdWithMember(commentId)
                .orElseThrow(() -> new EntityNotFoundException());

        permissionService.checkEditPermission(loginMemberId, assignmentComment.getWriter().getId());

        assignmentComment.editContent(newContent);
    }
}
