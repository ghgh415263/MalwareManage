package com.malclean.admin.service.malwarefile;

import com.malclean.admin.entity.MalwareFile;
import com.malclean.admin.entity.MalwareFileAiAnalysisResult;
import com.malclean.admin.jsonUtil.JsonConverter;
import com.malclean.admin.repository.malwarefile.MalwareFileAiAnalysisResultRepository;
import com.malclean.admin.repository.malwarefile.MalwareFileRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.reactive.function.client.WebClient;

@RequiredArgsConstructor
@Slf4j
@Service
public class MalwareFileAnalysisApiService {
    private final MalwareFileRepository malwareFileRepository;

    private final MalwareFileAiAnalysisResultRepository malwareFileAiAnalysisResultRepository;

    private final JsonConverter jsonConverter;

    @Transactional
    public ApiOutput aiApiAnalyze(Long id) {
        MalwareFile malwareFile = malwareFileRepository.findById(id).orElseThrow(() -> new RuntimeException("엔티티가 존재하지 않음"));

        WebClient client = WebClient.builder()
                .baseUrl("http://localhost:8000")
                .defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)
                .build();

        String StoreFilename = malwareFile.getStoreFilename();
        String apiRequest = "{\"StoreFilename\":\""+ StoreFilename +"\"}";

        ApiOutput apiOutput = client.post()
                .uri("/analyze")
                .accept(MediaType.APPLICATION_JSON)
                .bodyValue(apiRequest)
                .retrieve()
                .bodyToMono(ApiOutput.class)
                .block();

        String jsonResult = jsonConverter.ObjectToJson(apiOutput);
        MalwareFileAiAnalysisResult malwareFileAiAnalysisResult = new MalwareFileAiAnalysisResult(1L, jsonResult);
        malwareFileAiAnalysisResultRepository.save(malwareFileAiAnalysisResult);

        return apiOutput;
    }
}
