package com.malclean.admin.service.malwarereport;

import com.malclean.admin.controller.malwarereport.MalwareReportSaveDto;
import com.malclean.admin.entity.MalwareReport;
import com.malclean.admin.entity.Member;
import com.malclean.admin.entity.malware.Malware;
import com.malclean.admin.repository.malware.MalwareRepository;
import com.malclean.admin.repository.malwarereport.MalwareReportRepository;
import com.malclean.admin.store.LocalStoreManager;
import com.malclean.admin.store.StoreManager;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@RequiredArgsConstructor
@Slf4j
@Service
public class MalwareReportSaveService {

    private final MalwareReportRepository malwareReportRepository;

    private final MalwareRepository malwareRepository;

    private final String malwarereportDir = "C:/workspace/malware/malwarereport/";

    private final StoreManager localStoreManager = new LocalStoreManager(malwarereportDir);

    @Transactional
    public Long saveMalwareReport(Long malwareId, MalwareReportSaveDto malwareReportSaveDto, Member member) {
        Malware malware = malwareRepository.findById(malwareId)
                .orElseThrow();

        String storeFilename = localStoreManager.save(malwareReportSaveDto.getMultipartFile());

        MalwareReport malwareReport = MalwareReport.builder()
                .poster(member)
                .malware(malware)
                .title(malwareReportSaveDto.getTitle())
                .content(malwareReportSaveDto.getContent())
                .filename(malwareReportSaveDto.getMultipartFile().getOriginalFilename())
                .storeFilename(storeFilename)
                .build();

        return malwareReportRepository.save(malwareReport);
    }

}
