package com.malclean.admin.service.malware.MalwareDetail;

import com.malclean.admin.entity.Malware;
import com.malclean.admin.entity.MalwareBehavior;
import com.malclean.admin.entity.MalwareMalwareFileMap;
import com.malclean.admin.entity.MalwarePurpose;
import com.malclean.admin.enumtype.RisknessType;
import com.malclean.admin.pagination.CustomPage;
import lombok.Getter;
import org.springframework.data.domain.Page;

import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

@Getter
public class MalwareDetailDto {

    Long id;

    String nickname;

    String title;

    String content;

    RisknessType riskness;

    LocalDateTime resolvedTime;

    LocalDateTime detectedTime;

    List<String> malwarePurposeList;

    List<String> malwareBehaviorList;


    Long posterId;
    String posterUsername;


    CustomPage<MalwareFileInPageDto> malwareFilePage;

    public MalwareDetailDto(Malware malware, List<MalwarePurpose> malwarePurposeList, List<MalwareBehavior> malwareBehaviorList, Page<MalwareMalwareFileMap> page) {
        id = malware.getId();
        nickname = malware.getNickname();
        title = malware.getTitle();
        riskness = malware.getRiskness();
        content = malware.getContent();
        resolvedTime = malware.getResolvedTime();
        detectedTime = malware.getDetectedTime();
        posterId = malware.getPoster().getId();
        posterUsername = malware.getPoster().getUsername();

        this.malwarePurposeList = malwarePurposeList.stream().map(
                malwarePurpose -> {
                    return malwarePurpose.getPurpose().getTitle();
                })
                .collect(Collectors.toList());

        this.malwareBehaviorList = malwareBehaviorList.stream()
                .map(malwareBehavior -> {
                    return malwareBehavior.getBehavior().getTitle();
                })
                .collect(Collectors.toList());

        List<MalwareFileInPageDto> malwareFileInPageDtoList = page
                .map(malwareMalwareFileMap->{
                    return new MalwareFileInPageDto(malwareMalwareFileMap);
                })
                .toList();
        malwareFilePage = new CustomPage<MalwareFileInPageDto>(malwareFileInPageDtoList, page.getPageable(), page.getTotalElements());
    }
}
