package com.malclean.admin.assignment.controller;

import com.malclean.admin.assignment.domain.AssignmentAttachment;
import com.malclean.admin.assignment.application.AssignmentAttachmentFindService;
import com.malclean.admin.malware.infrastructure.store.LocalStoreManager;
import com.malclean.admin.malware.infrastructure.store.LocalStorePath;
import com.malclean.admin.malware.infrastructure.store.StoreManager;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.util.UriUtils;

import java.nio.charset.StandardCharsets;

@RequiredArgsConstructor
@Slf4j
@Controller
public class AssignmentDownloadController {

    private final AssignmentAttachmentFindService assignmentAttachmentFindService;

    private final StoreManager localStoreManager = new LocalStoreManager(LocalStorePath.malwareAssignmentAttatchmentDir);

    @GetMapping("/attachments/{id}/download")
    public ResponseEntity<Resource> assignmentAttachmentDownload(@PathVariable Long id) {
        AssignmentAttachment assignmentAttachment = assignmentAttachmentFindService.findAssignmentAttachment(id);

        Resource resource = localStoreManager.getResource(assignmentAttachment.getStoreFilename());
        String encodedFileName = UriUtils.encode(assignmentAttachment.getFilename(), StandardCharsets.UTF_8);

        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Disposition", "attachment; filename=" + encodedFileName);

        return new ResponseEntity<>(resource, headers, HttpStatus.OK);
    }
}
