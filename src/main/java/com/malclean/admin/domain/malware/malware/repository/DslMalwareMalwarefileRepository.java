package com.malclean.admin.domain.malware.malware.repository;

import com.malclean.admin.domain.malware.malware.MalwareMalwarefile;
import com.querydsl.jpa.impl.JPAQueryFactory;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;
import java.util.Optional;

import static com.malclean.admin.domain.malware.malware.QMalware.malware;
import static com.malclean.admin.domain.malware.malware.QMalwareMalwarefile.malwareMalwarefile;
import static com.malclean.admin.domain.malware.malwarefile.QMalwarefile.malwarefile;

@Slf4j
@Repository
public class DslMalwareMalwarefileRepository {

    private final EntityManager em;
    private final JPAQueryFactory query;

    public DslMalwareMalwarefileRepository(EntityManager em){
        this.em = em;
        this.query = new JPAQueryFactory(em);
    }

    public Optional<MalwareMalwarefile> findByMalwareIdAndMalwareFileId(Long malwareId, Long malwareFileId){
        return Optional.ofNullable(query
                .selectFrom(malwareMalwarefile)
                .leftJoin(malwareMalwarefile.malware, malware).fetchJoin()
                .leftJoin(malwareMalwarefile.malwarefile, malwarefile).fetchJoin()
                .where(malwareMalwarefile.malware.id.eq(malwareId))
                .where(malwareMalwarefile.malwarefile.id.eq(malwareFileId))
                .fetchOne());
    }
}
