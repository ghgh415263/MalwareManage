package com.malclean.admin.domain.malware.malwaremalwarefilemap;

import com.malclean.admin.domain.malware.MalwareMalwareFileMap;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Repository;

import javax.persistence.EntityManager;

@Slf4j
@RequiredArgsConstructor
@Repository
public class MalwareMalwareFileMapRepository {

    private final EntityManager em;

    public MalwareMalwareFileMap save(MalwareMalwareFileMap map) {
        em.persist(map);
        return map;
    }

    public Long countByMalwareFileId(Long malwareFileId) {
        return (Long) em.createQuery("select count(mm) from MalwareMalwareFileMap mm where mm.malwareFile.id = :malwareFileId")
                .setParameter("malwareFileId", malwareFileId)
                .getSingleResult();
    }

    public Long countByMalwareId(Long malwareId) {
        return (Long) em.createQuery("select count(mm) from MalwareMalwareFileMap mm where mm.malware.id = :malwareId")
                .setParameter("malwareId", malwareId)
                .getSingleResult();
    }

    public void deleteByMalwareIdAndMalwareFileId(Long malwareId, Long malwareFileId) {
        em.createQuery("delete from MalwareMalwareFileMap mm where mm.malware.id = :malwareId and mm.malwareFile.id = :malwareFileId")
                .setParameter("malwareId", malwareId)
                .setParameter("malwareFileId", malwareFileId)
                .executeUpdate();
    }
}
