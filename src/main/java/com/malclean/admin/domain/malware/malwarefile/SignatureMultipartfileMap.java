package com.malclean.admin.domain.malware.malwarefile;

import org.springframework.web.multipart.MultipartFile;

import java.util.*;
import java.util.stream.Collectors;

public class SignatureMultipartfileMap {

    private SignatureCreator signatureCreator;

    private final Map<String, MultipartFile> map = new HashMap<>();

    public SignatureMultipartfileMap(SignatureCreator signatureCreator, List<MultipartFile> MultipartFileList){
        this.signatureCreator = signatureCreator;
        MultipartFileList.stream()
                .forEach(file -> {
                    String signature = signatureCreator.createSignature(file);
                    if (map.get(signature) != null)
                        throw new DuplicateFileUploadException();
                    put(signature, file);
                });
    }

    private void put(String signature, MultipartFile multipartFile){
        map.put(signature, multipartFile);
    }

    public MultipartFile get(String signature) {
        return map.get(signature);
    }

    public List<String> getSignatureList(){
        return new ArrayList<String>(map.keySet());
    }

    public List<MultipartFile> getMultipartFileList(){
        return new ArrayList<MultipartFile>(map.values());
    }

    public List<String> getOtherSignatures(List<String> signatures){
        Set<String> savedSignatureSet = new HashSet<>(signatures);
        return map.keySet().stream().filter(signature -> !savedSignatureSet.contains(signature))
                .collect(Collectors.toList());
    }
}
