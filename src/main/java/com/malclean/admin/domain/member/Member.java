package com.malclean.admin.domain.member;


import com.malclean.admin.common.BaseEntity;
import lombok.AccessLevel;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

import javax.persistence.*;

@Entity
@Getter
@NoArgsConstructor(access = AccessLevel.PROTECTED)
@Table(
        uniqueConstraints = {
                @UniqueConstraint(columnNames = { "username" }),
                @UniqueConstraint(columnNames = { "employeeId" })
        }
)
public class Member extends BaseEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String username;

    private String password;

    private Long employeeId;

    @Enumerated(EnumType.STRING)
    private AuthorityType authority;


    @Builder
    private Member(String username, String password, Long employeeId, AuthorityType authority){
        this.username = username;
        this.password = password;
        this.employeeId = employeeId;
        setAuthority(authority);
    }

    private void setAuthority(AuthorityType authority) {
        if (authority == null)
            throw new IllegalArgumentException("잘못된 권한입니다.");
        this.authority = authority;
    }

    public boolean hasAdminAuthorityType() {
        return authority == AuthorityType.ADMIN;
    }
}

