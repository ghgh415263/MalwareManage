package com.malclean.admin.store;

import com.malclean.admin.store.exception.FileNotTransferedException;
import com.malclean.admin.store.exception.WrongUrlException;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.stereotype.Component;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;

@Slf4j
@Component
@RequiredArgsConstructor
public class LocalStoreUtils {
    private final FilenameGenerator filenameGenerator;

    public String save(MultipartFile multipartFile, String fileDir) {

        String storeFileName = filenameGenerator.createStoreFileName(multipartFile.getOriginalFilename());
        String fullPath = fileDir + storeFileName;
        try{
            multipartFile.transferTo(new File(fullPath));
            return storeFileName;
        }
        catch (IOException ioException){
            throw new FileNotTransferedException(ioException);
        }
    }

    public Resource getResource(String filename, String fileDir) {
        String fullPath = fileDir + filename;
        try {
            UrlResource urlResource = new UrlResource("file:" + fullPath);
            return urlResource;
        }
        catch(MalformedURLException e) {
            throw new WrongUrlException(e);
        }
    }
}
