package com.malclean.admin.service.malwarereport;

import com.malclean.admin.controller.malwarereport.MalwareReportSaveDto;
import com.malclean.admin.entity.MalwareReport;
import com.malclean.admin.entity.Member;
import com.malclean.admin.entity.malware.Malware;
import com.malclean.admin.enumtype.AuthorityType;
import com.malclean.admin.enumtype.RisknessType;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityManager;
import java.time.LocalDateTime;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

@Slf4j
@SpringBootTest
@Transactional
public class MalwareReportSaveServiceTest {

    @Autowired
    private EntityManager em;

    @Autowired
    private MalwareReportSaveService malwareReportSaveService;

    @Test
    void 악성코드보고서_저장성공() {
        Member member = Member.builder()
                .username("testMember")
                .password("")
                .authority(AuthorityType.ADMIN)
                .employeeId(1L)
                .build();
        em.persist(member);

        Malware malware = Malware.builder()
                .title("title")
                .content("")
                .nickname("")
                .resolvedTime(LocalDateTime.now())
                .detectedTime(LocalDateTime.now())
                .poster(member)
                .riskness(RisknessType.LOW)
                .build();
        em.persist(malware);

        MockMultipartFile file = new MockMultipartFile("testfile","testfile.txt", null, "test1".getBytes());

        MalwareReportSaveDto malwareReportSaveDto = new MalwareReportSaveDto("testTitle", "testContent", file);

        Long reportId = malwareReportSaveService.saveMalwareReport(malware.getId(), malwareReportSaveDto, member);

        MalwareReport findedMalwareReport = em.find(MalwareReport.class, reportId);

        assertThat(malware.getId()).isEqualTo(findedMalwareReport.getId());
    }


}
