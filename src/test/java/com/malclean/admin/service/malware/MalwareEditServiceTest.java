package com.malclean.admin.service.malware;

import com.malclean.admin.entity.Member;
import com.malclean.admin.entity.malware.Malware;
import com.malclean.admin.enumtype.AuthorityType;
import com.malclean.admin.enumtype.BehaviorType;
import com.malclean.admin.enumtype.PurposeType;
import com.malclean.admin.enumtype.RisknessType;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityManager;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

@Slf4j
@SpringBootTest
@Transactional
public class MalwareEditServiceTest {

    @Autowired
    private MalwareEditService malwareEditService;

    @Autowired
    private EntityManager em;

    @Test
    void 악성코드수정() {
        Member member = Member.builder()
                .username("testMember")
                .password("")
                .authority(AuthorityType.ADMIN)
                .employeeId(1L)
                .build();
        em.persist(member);

        Malware malware = Malware.builder()
                .title("title")
                .content("content")
                .nickname("nickname")
                .resolvedTime(LocalDateTime.now())
                .detectedTime(LocalDateTime.now())
                .poster(member)
                .riskness(RisknessType.LOW)
                .build();

        em.persist(malware);

        em.flush();
        em.clear();

        List<String> purposeList = Arrays.asList(PurposeType.BOT.getTitle(), PurposeType.ADWARE.getTitle());
        List<String> behaviorList = Arrays.asList(BehaviorType.PUP.getTitle(), BehaviorType.WORM.getTitle());
        MalwareEditDto malwareEditDto = new MalwareEditDto("editedTitle","editedContent","editedNickname", RisknessType.MID.getTitle(), null, purposeList, behaviorList, null, LocalDateTime.now(), LocalDateTime.now());

        malwareEditService.editMalware(malware.getId(), malwareEditDto);
        em.flush();
        em.clear();
        Malware findedMalware = em.find(Malware.class, malware.getId());
        findedMalware.getMalwarePurposeList().stream().map(malwarePurpose -> malwarePurpose.getPurpose());
        findedMalware.getMalwareBehaviorList().stream().map(malwareBehavior -> malwareBehavior.getBehavior()); /* 지연 로딩*/
    }
}
