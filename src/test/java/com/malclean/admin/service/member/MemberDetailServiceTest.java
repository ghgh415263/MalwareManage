package com.malclean.admin.service.member;

import com.malclean.admin.member.application.member.MemberDetailService;
import com.malclean.admin.member.domain.Member;
import com.malclean.admin.enumtype.AuthorityType;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityManager;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

@Slf4j
@SpringBootTest
@Transactional
public class MemberDetailServiceTest {

    @Autowired
    private EntityManager em;

    @Autowired
    private MemberDetailService memberDetailService;

    @Test
    void 멤버상세가져오기_나() {
        Member myMember = Member.builder()
                .username("myTester")
                .password("123")
                .employeeId(1L)
                .authority(AuthorityType.ADMIN)
                .build();
        em.persist(myMember);

        MemberDetailService.MemberPageResponse memberPageResponse = memberDetailService.findMember(myMember.getId(), myMember.getUsername());

        assertThat(memberPageResponse.getUsername()).isEqualTo("myTester"); //todo 나일때와 다른 사람일때 다른 정보를 가져온다면 나중에 바꿀것
    }

    @Test
    void 멤버상세가져오기_다른사람() {
        Member myMember = Member.builder()
                .username("myTester")
                .password("123")
                .employeeId(1L)
                .authority(AuthorityType.ADMIN)
                .build();
        em.persist(myMember);

        Member otherTester = Member.builder()
                .username("otherTester")
                .password("123")
                .employeeId(2L)
                .authority(AuthorityType.ADMIN)
                .build();
        em.persist(otherTester);

        MemberDetailService.MemberPageResponse memberPageResponse = memberDetailService.findMember(otherTester.getId(), otherTester.getUsername());

        assertThat(memberPageResponse.getUsername()).isEqualTo("otherTester"); //todo 나일때와 다른 사람일때 다른 정보를 가져온다면 나중에 바꿀것
    }
}
