package com.malclean.admin.service.member;

import com.malclean.admin.member.application.MemberSaveService;
import com.malclean.admin.member.domain.Member;
import com.malclean.admin.member.domain.AuthorityType;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.EntityManager;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;
import static org.assertj.core.api.AssertionsForClassTypes.assertThatThrownBy;

@Slf4j
@SpringBootTest
@Transactional
public class MemberSaveServiceTest {

    @Autowired
    private EntityManager em;

    @Autowired
    private MemberSaveService memberSaveService;


    @Test
    void 회원가입_성공() {
        Member member = Member.builder()
                .username("tester1")
                .password("123")
                .employeeId(1L)
                .authority(AuthorityType.ADMIN)
                .build();

        memberSaveService.saveMember(member);
        em.flush();
        em.clear();

        Member findedMember = em.find(Member.class, member.getId());

        assertThat(findedMember.getUsername()).isEqualTo("tester1");
    }

    @Test
    void 회원가입_실패_중복이름() {
        Member member1 = Member.builder()
                .username("tester1")
                .password("123")
                .employeeId(1L)
                .authority(AuthorityType.ADMIN)
                .build();
        em.persist(member1);
        em.flush();
        em.clear();

        Member member2 = Member.builder()
                .username("tester1")
                .password("123")
                .employeeId(1L)
                .authority(AuthorityType.ADMIN)
                .build();

        assertThatThrownBy(() -> memberSaveService.saveMember(member2))
                .isInstanceOf(DataIntegrityViolationException.class);

    }
}
