package com.malclean.admin.service.member;

import com.malclean.admin.member.application.MemberSecurityService;
import com.malclean.admin.member.domain.Member;
import com.malclean.admin.member.domain.AuthorityType;
import com.malclean.admin.member.domain.member.MemberRepository;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.transaction.annotation.Transactional;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;
import static org.assertj.core.api.AssertionsForClassTypes.assertThatThrownBy;

@Slf4j
@SpringBootTest
@Transactional
public class MemberSecurityServiceTest {
    @Autowired
    private MemberSecurityService memberSecurityService;

    @Autowired
    private MemberRepository memberRepository;

    @Test
    void 회원찾기_실패() {
        assertThatThrownBy(() -> memberSecurityService.loadUserByUsername("tester"))
                .isInstanceOf(UsernameNotFoundException.class);
    }

    @Test
    void 회원찾기_성공() {
        Member member = Member.builder()
                .username("testMember")
                .password("")
                .authority(AuthorityType.ADMIN)
                .employeeId(1L)
                .build();
        memberRepository.save(member);

        UserDetails findedMember = memberSecurityService.loadUserByUsername("testMember");

        assertThat(member.getUsername()).isEqualTo(findedMember.getUsername());
    }
}
