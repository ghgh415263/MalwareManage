package com.malclean.admin.ui.announcement;

import com.malclean.admin.application.announcement.AnnouncementSaveService;
import com.malclean.admin.application.announcement.requestdto.AnnouncementSaveRequest;
import com.malclean.admin.common.enummapper.EnumDto;
import com.malclean.admin.common.enummapper.EnumMapper;
import com.malclean.admin.domain.announcement.enums.AnnouncementStatusType;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.ui.ExtendedModelMap;
import org.springframework.ui.Model;
import org.springframework.validation.BeanPropertyBindingResult;
import org.springframework.validation.BindingResult;

import java.util.List;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;
import static org.mockito.Mockito.when;

@ExtendWith(SpringExtension.class)
public class AnnouncementSaveControllerTest {

    private AnnouncementSaveController announcementSaveController;

    @Mock
    private AnnouncementSaveService announcementSaveService;

    private EnumMapper enumMapper;

    @BeforeEach
    public void beforeEach() {
        enumMapper = new EnumMapper();
        enumMapper.put("AnnouncementStatusType", AnnouncementStatusType.class);
        announcementSaveController = new AnnouncementSaveController(announcementSaveService, enumMapper);
    }

    @Test
    public void 저장성공() {
        //given
        AnnouncementSaveRequest request = new AnnouncementSaveRequest("testTitle","testContent", "NORMAL");
        BindingResult bindingResult = new BeanPropertyBindingResult(request, "announcementSaveRequest");
        Model model = new ExtendedModelMap();
        Long sessionMemberId = 1l;

        when(announcementSaveService.save(request, sessionMemberId))
                .thenReturn(1l);

        //when
        String viewName = announcementSaveController.save(request, bindingResult, sessionMemberId, model);

        //then
        assertThat(viewName).isEqualTo("redirect:/announcements/1");
    }

    @Test
    public void 저장실패_요청바인딩실패() {
        //given
        AnnouncementSaveRequest request = new AnnouncementSaveRequest("","", "");
        BindingResult bindingResult = new BeanPropertyBindingResult(request, "announcementSaveRequest");
        bindingResult.rejectValue("title", null, "");
        bindingResult.rejectValue("content", null, "");
        bindingResult.rejectValue("announcementStatus", null, "");
        Model model = new ExtendedModelMap();
        Long sessionMemberId = 1l;

        //when
        String viewName = announcementSaveController.save(request, bindingResult, sessionMemberId, model);

        //then
        assertThat(viewName).isEqualTo("announcementPostForm");
        List<EnumDto> enums = (List<EnumDto>) model.getAttribute("AnnouncementStatusType");
        assertThat(enums.size()).isEqualTo(3);
    }
}
