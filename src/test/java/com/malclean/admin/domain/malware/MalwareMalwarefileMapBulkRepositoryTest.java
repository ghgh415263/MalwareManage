package com.malclean.admin.domain.malware;


import com.malclean.admin.TestAuditingConfig;
import com.malclean.admin.domain.malware.malware.Malware;
import com.malclean.admin.domain.malware.malware.MalwareMalwarefileMap;
import com.malclean.admin.domain.malware.malware.MalwareMalwareFileMapBulkRepository;
import com.malclean.admin.domain.malware.malwarefile.Malwarefile;
import com.malclean.admin.helper.TestMalwarefileFactory;
import com.malclean.admin.helper.TestMalwareFactory;
import com.malclean.admin.infrastructure.malware.malware.MalwareMalwareFileMapBulkRepositoryImpl;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.context.annotation.Import;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.Arrays;
import java.util.List;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

@DataJpaTest
@Import(TestAuditingConfig.class)
public class MalwareMalwarefileMapBulkRepositoryTest {

    @Autowired
    private TestEntityManager testEntityManager;

    @Autowired
    private JdbcTemplate jdbcTemplate;

    private MalwareMalwareFileMapBulkRepository repository;

    @BeforeEach
    public void beforeEach() {
        repository = new MalwareMalwareFileMapBulkRepositoryImpl(jdbcTemplate);
    }

    @Test
    public void 리스트저장() {
        Malware malware = TestMalwareFactory.createMalware();
        testEntityManager.persist(malware);
        Malwarefile malwarefile = TestMalwarefileFactory.createMalwarefile();
        testEntityManager.persist(malwarefile);

        MalwareMalwarefileMap malwareMalwarefileMap1 = MalwareMalwarefileMap.builder()
                .malware(malware)
                .filename("test")
                .malwarefile(malwarefile)
                .build();

        List<MalwareMalwarefileMap> list = Arrays.asList(malwareMalwarefileMap1);
        repository.saveAll(list, 1l);

        MalwareMalwarefileMap findedMap = testEntityManager.find(MalwareMalwarefileMap.class, 1l);

        assertThat(findedMap.getId()).isEqualTo(1l);
    }
}
