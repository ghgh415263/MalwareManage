package com.malclean.admin.domain.malware.malwarefile;

import com.malclean.admin.common.exception.ApiErrorException;
import com.malclean.admin.domain.malware.malwarefile.service.AnalysisModelClient;
import com.malclean.admin.domain.malware.malwarefile.service.AnalysisModelListResponse;
import com.malclean.admin.infrastructure.malware.malwarefile.AnalysisModelClientImpl;
import okhttp3.mockwebserver.MockResponse;
import okhttp3.mockwebserver.MockWebServer;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.web.reactive.function.client.WebClient;

import java.io.IOException;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;
import static org.assertj.core.api.AssertionsForClassTypes.assertThatThrownBy;

public class AnalysisModelClientTest {

    private AnalysisModelClient analysisModelClient;

    public static MockWebServer mockWebServer;

    @BeforeEach
    public void beforeEach() {
        WebClient webClient = WebClient.create(mockWebServer.url("").toString());
        analysisModelClient = new AnalysisModelClientImpl(webClient);
    }

    @BeforeAll
    static void setUp() throws IOException {
        mockWebServer = new MockWebServer();
        mockWebServer.start();
    }

    @AfterAll
    static void tearDown() throws IOException {
        mockWebServer.shutdown();
    }

    @Test
    public void 에러400() {
        mockWebServer.enqueue(new MockResponse().setResponseCode(400));

        assertThatThrownBy(() -> analysisModelClient.findAnalysisModelList())
                .isInstanceOf(ApiErrorException.class);
    }

    @Test
    public void 정상200() {

        String responseBody = "{ \"analysisModelList\" : [{\"id\": 1, \"name\": \"model1\"},{\"id\": 2, \"name\": \"model2\"}]}".trim();

        mockWebServer.enqueue(
                new MockResponse()
                .setResponseCode(200)
                .setHeader("Content-Type", "application/json")
                .setBody(responseBody)
        );

        AnalysisModelListResponse response = analysisModelClient.findAnalysisModelList();

        assertThat(response.getAnalysisModelList().size()).isEqualTo(2);
    }
}
