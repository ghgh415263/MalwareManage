package com.malclean.admin.domain.malware.malwarefile;

import com.malclean.admin.helper.TestApiErrorResponseFactory;
import com.malclean.admin.infrastructure.common.exception.ApiErrorException;
import com.malclean.admin.domain.malware.malwarefile.service.AnalysisResultResponse;
import com.malclean.admin.domain.malware.malwarefile.service.MalwareFileAnalysisClient;
import com.malclean.admin.infrastructure.common.JsonConverter;
import com.malclean.admin.infrastructure.malware.malwarefile.MalwareFileAnalysisClientImpl;
import okhttp3.mockwebserver.MockResponse;
import okhttp3.mockwebserver.MockWebServer;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.web.reactive.function.client.WebClient;

import java.io.IOException;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;
import static org.assertj.core.api.AssertionsForClassTypes.assertThatThrownBy;

public class MalwareFileAnalysisClientTest {

    private static MockWebServer mockWebServer;

    private MalwareFileAnalysisClient malwareFileAnalysisClient;

    @BeforeEach
    public void beforeEach() {
        WebClient webClient = WebClient.create(mockWebServer.url("").toString());
        malwareFileAnalysisClient = new MalwareFileAnalysisClientImpl(new JsonConverter(), webClient);
    }

    @BeforeAll //전체 실행전에 한번
    static void setUp() throws IOException {
        mockWebServer = new MockWebServer();
        mockWebServer.start();
    }

    @AfterAll // 전체 실행후에 한번
    static void tearDown() throws IOException {
        mockWebServer.shutdown();
    }

    @Test
    public void 에러400() {
        String responseBody = TestApiErrorResponseFactory.create();

        mockWebServer.enqueue(new MockResponse()
                .setResponseCode(400)
                .setHeader("Content-Type", "application/json")
                .setBody(responseBody));

        assertThatThrownBy(() -> malwareFileAnalysisClient.analyzeMalwareFile("testFilename.jpg", 1))
                .isInstanceOf(ApiErrorException.class);
    }

    @Test
    public void 정상200() {

        String responseBody = "{ \"apiModelName\" : \"testModelName\", \"outputList\" : [{\"className\": \"className1\", \"probability\": 0.5},{\"className\": \"className2\", \"probability\": 0.5}] }";

        mockWebServer.enqueue(
                new MockResponse()
                        .setResponseCode(200)
                        .setHeader("Content-Type", "application/json")
                        .setBody(responseBody)
        );

        AnalysisResultResponse analysisResultResponse = malwareFileAnalysisClient.analyzeMalwareFile("testFilename.jpg", 1);

        assertThat(analysisResultResponse.getOutputList().size())
                .isEqualTo(2);
    }
}
