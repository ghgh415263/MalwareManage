package com.malclean.admin.domain.assignment;

import com.malclean.admin.domain.assignment.assignment.MalwareAssignment;
import com.malclean.admin.domain.assignment.assignment.MalwareAssignmentRepository;
import com.malclean.admin.domain.assignment.assignmentattachment.AssignmentAttachment;
import com.malclean.admin.domain.assignment.assignmentattachment.AssignmentAttachmentBulkRepository;
import com.malclean.admin.domain.assignment.assignmentattachment.AssignmentAttachmentRepository;
import com.malclean.admin.infrastructure.assignment.assignmentattachment.AssignmentAttachmentBulkRepositoryImpl;
import org.junit.jupiter.api.BeforeEach;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

@DataJpaTest
public class AssignmentAttachmentBulkRepositoryTest {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Autowired
    private MalwareAssignmentRepository malwareAssignmentRepository;

    @Autowired
    private AssignmentAttachmentRepository assignmentAttachmentRepository;

    private AssignmentAttachmentBulkRepository assignmentAttachmentBulkRepository;

    /*
    @BeforeEach
    public void beforeEach() {
        assignmentAttachmentBulkRepository = new AssignmentAttachmentBulkRepositoryImpl(jdbcTemplate);
    }

    void 과제첨부파일_리스트저장(){
        MalwareAssignment malwareAssignment = MalwareAssignment.builder()
                .malware()
                .assignerId()
                .assigneeId()
                .assignmentStatus()
                .content()
                .estimatedTime()
                .title();

        AssignmentAttachment assignmentAttachment = AssignmentAttachment.builder()
                .malwareAssignment()
                .storeFilename("")
                .filename("")
                .build();
        AssignmentAttachment assignmentAttachment2 = AssignmentAttachment.builder()
                .malwareAssignment()
                .storeFilename("")
                .filename("")
                .build();
        List<AssignmentAttachment> attachments = new ArrayList<>(Arrays.asList(assignmentAttachment, assignmentAttachment2));
        assignmentAttachmentBulkRepository.saveAll(attachments, 1l);


    }*/
}
